version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:4000
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: video2sop
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/video2sop
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
      - PORT=4000
      - CORS_ORIGIN=http://localhost:3000
      - JWT_SECRET=your-256-bit-secret-key-here
      - FILE_ENCRYPTION_KEY=your-32-character-encryption-key
      - ADMIN_TOKEN=your-32-character-admin-token
      - OPENAI_API_KEY=your-openai-api-key-here
      - MAX_FILE_SIZE=104857600
      - JOB_RETENTION_DAYS=7
      - MAX_CONCURRENT_JOBS=5
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
      - ./backend/cookies.txt:/app/cookies.txt:ro
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4000"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
  backend_logs: