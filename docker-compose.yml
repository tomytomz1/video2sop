version: '3.8'
services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
  # Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: TBtb0035993!
      POSTGRES_DB: video2sop
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:TBtb0035993!@db:5432/video2sop
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost:3000
      - UPLOAD_DIR=./uploads
      - REDIS_URL=redis://redis:6379
      - YTDLP_COOKIES_PATH=./cookies.txt
      - LOG_LEVEL=info
      - STORAGE_TYPE=local
      - STORAGE_PATH=./uploads
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4000"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      - db
      - redis
volumes:
  postgres_data:
  redis_data:
  backend_uploads:
  backend_logs: